---
- name: Export AWX Inventory to GitHub
  hosts: localhost
  gather_facts: false
  vars:
  
    # Credenciales de acceso a la API de AWX
    awx_host: "{{ lookup('env', 'AWX_API_URL') }}"
    awx_token: "{{ lookup('env', 'AWX_OAUTH_TOKEN') }}"
    
    # Variable que identifica el inventario a exportar.
    inventory_id: 3
    
    # Variables para acceso a Github
    github_api_url: "https://api.github.com"
    github_username: "{{ scm_username }}"  # De credencial Source Control de Github
    github_token: "{{ scm_password }}"     # Personal Access Token de Github
    repo_owner: "{{ scm_username }}"       # Propietario del repositorio (en nuestro caso coincide con el usuario de github)
    repo_name: "{{ inventariosCPD }}"
    
    # Variables para logs de exportaci√≥n
    file_path: "inventories/{{ inventory_name | default('inventory') }}_{{ ansible_date_time.date }}.txt"
    commit_message: "Update inventory {{ inventory_name | default('inventory') }} - {{ ansible_date_time.date }}"

  tasks:
    - name: Get current date and time
      setup:
        filter: ansible_date_time

    - name: Get AWX inventory details
      uri:
        url: "{{ awx_host }}/api/v2/inventories/{{ inventory_id }}/"
        method: GET
        headers:
          Authorization: "Bearer {{ (awx_token }}"
        validate_certs: false
      register: inventory_info

    - name: Get inventory hosts
      uri:
        url: "{{ awx_host }}/api/v2/inventories/{{ inventory_id }}/hosts/"
        method: GET
        headers:
          Authorization: "Bearer {{ (awx_token }}"
        validate_certs: false
      register: inventory_hosts

    - name: Get inventory groups
      uri:
        url: "{{ awx_host }}/api/v2/inventories/{{ inventory_id }}/groups/"
        method: GET
        headers:
          Authorization: "Bearer {{ (awx_token }}"
        validate_certs: false
      register: inventory_groups

    - name: Generate inventory content
      set_fact:
        inventory_content: |
          # AWX Inventory Export
          # Inventory Name: {{ inventory_info.json.name }}
          # Export Date: {{ ansible_date_time.iso8601 }}
          # Total Hosts: {{ inventory_hosts.json.count }}
          # Total Groups: {{ inventory_groups.json.count }}
          
          [all:vars]
          # Global variables from AWX inventory
          
          {% for group in inventory_groups.json.results %}
          [{{ group.name }}]
          {% for host in inventory_hosts.json.results %}
          {% if group.name in (host.groups | default([])) %}
          {{ host.name }} ansible_host={{ host.variables.ansible_host | default(host.name) }}
          {% endif %}
          {% endfor %}
          
          [{{ group.name }}:vars]
          {% for key, value in group.variables.items() %}
          {{ key }}={{ value }}
          {% endfor %}
          
          {% endfor %}
          
          [ungrouped]
          {% for host in inventory_hosts.json.results %}
          {% if host.groups | length == 0 %}
          {{ host.name }} ansible_host={{ host.variables.ansible_host | default(host.name) }}
          {% endif %}
          {% endfor %}

    - name: Check if file exists in GitHub repository
      uri:
        url: "{{ github_api_url }}/repos/{{ repo_owner }}/{{ repo_name }}/contents/{{ file_path }}"
        method: GET
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: [200, 404]
      register: github_file_check

    - name: Create or update file in GitHub
      uri:
        url: "{{ github_api_url }}/repos/{{ repo_owner }}/{{ repo_name }}/contents/{{ file_path }}"
        method: PUT
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        body_format: json
        body:
          message: "{{ commit_message }}"
          content: "{{ inventory_content | b64encode }}"
          sha: "{{ github_file_check.json.sha | default(omit) }}"
        status_code: [200, 201]
      register: github_upload

    - name: Display result
      debug:
        msg: 
          - "Inventory successfully uploaded to GitHub"
          - "Repository: {{ repo_owner }}/{{ repo_name }}"
          - "File path: {{ file_path }}"
          - "Commit SHA: {{ github_upload.json.commit.sha }}"
          - "File URL: {{ github_upload.json.content.html_url }}"