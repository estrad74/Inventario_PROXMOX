---
- name: Recopilar facts
  hosts: all
  serial: 1
  vars:
    awx_url: "{{ lookup('env', 'AWX_API_URL') }}"
    awx_token: "{{ lookup('env', 'AWX_OAUTH_TOKEN') }}"
    ansible_ssh_extra_args: "-oKexAlgorithms=+diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 -oHostKeyAlgorithms=+ssh-rsa -oMACs=hmac-sha1 -oPubkeyAcceptedKeyTypes=+ssh-dss,ssh-rsa"

  tasks:

    - name: Recopilar facts estándar del sistema
      setup:
        gather_subset:
          - hardware
          - network
          - virtual
          - distribution

    - name: Recopilar información de paquetes instalados
      package_facts:
        manager: auto

    - name: Extraer versiones de Python instaladas sin json_query
      set_fact:
        python_versions_detected: "{{ python_versions_list | default([]) }}"
      vars:
        python_packages: "{{ ansible_facts.packages | dict2items | selectattr('key', 'match', '^python[0-9.]*$') | list }}"
        python_versions_list: >-
          {% set result = [] %}
          {% for pkg in python_packages %}
            {% for item in pkg.value %}
              {% set _ = result.append({'name': pkg.key, 'version': item.version}) %}
            {% endfor %}
          {% endfor %}
          {{ result }}

    - name: Extraer versiones de Java instaladas sin json_query
      set_fact:
        java_versions_detected: "{{ java_versions_list | default([]) }}"
      vars:
        java_packages: "{{ ansible_facts.packages | dict2items | selectattr('key', 'search', 'openjdk|java') | list }}"
        java_versions_list: >-
          {% set result = [] %}
          {% for pkg in java_packages %}
            {% for item in pkg.value %}
              {% set _ = result.append({'name': pkg.key, 'version': item.version}) %}
            {% endfor %}
          {% endfor %}
          {{ result }}

    - name: Extraer versiones de Tomcat instaladas sin json_query
      set_fact:
        tomcat_versions_detected: "{{ tomcat_versions_list | default([]) }}"
      vars:
        tomcat_packages: "{{ ansible_facts.packages | dict2items | selectattr('key', 'search', 'tomcat') | list }}"
        tomcat_versions_list: >-
          {% set result = [] %}
          {% for pkg in tomcat_packages %}
            {% for item in pkg.value %}
              {% set _ = result.append({'name': pkg.key, 'version': item.version}) %}
            {% endfor %}
          {% endfor %}
          {{ result }}

    - name: Construir diccionario con facts filtrados
      set_fact:
        filtered_system_facts:
          hostname: "{{ ansible_hostname }}"
          fqdn: "{{ ansible_fqdn | default('') }}"
          ip: "{{ ansible_default_ipv4.address | default('') }}"
          os:
            name: "{{ ansible_distribution }}"
            version: "{{ ansible_distribution_version }}"
            release: "{{ ansible_distribution_release | default('') }}"
          kernel: "{{ ansible_kernel }}"
          architecture: "{{ ansible_architecture }}"
          memory_mb: "{{ ansible_memtotal_mb }}"
          cpu_count: "{{ ansible_processor_count }}"
          python_versions: "{{ python_versions_detected }}"
          java_versions: "{{ java_versions_detected }}"
          tomcat_versions: "{{ tomcat_versions_detected }}"
          collected_at: "{{ lookup('pipe', 'date +%Y-%m-%dT%H:%M:%S') }}"
          
    - name: Actualizar host en AWX con facts filtrados
      awx.awx.host:
        controller_host: "{{ awx_url }}"
        controller_oauthtoken: "{{ awx_token }}"
        inventory: "{{ awx_inventory_id }}"
        name: "{{ inventory_hostname }}"
        new_name: "{{ hostname }}"
        validate_certs: false
        variables:
          original_name: "{{ original_name }}"
          name: "{{ name }}"
          hostname: "{{ hostname }}"
          ansible_host: "{{ ansible_host }}"
          proxmox_agent: "{{ proxmox_agent | default('') }}"
          proxmox_agent_interfaces: "{{ proxmox_agent_interfaces | default('') }}"
          proxmox_boot: "{{ proxmox_boot | default('') }}"
          proxmox_cores: "{{ proxmox_cores | default('') }}"
          proxmox_cpu: "{{ proxmox_cpu | default('') }}"
          proxmox_digest: "{{ proxmox_digest | default('') }}"
          proxmox_hotplug: "{{ proxmox_hotplug | default('') }}"
          proxmox_ide0: "{{ proxmox_ide0 | default('') }}"
          proxmox_memory: "{{ proxmox_memory | default('') }}"
          proxmox_meta: "{{ proxmox_meta | default('') }}"
          proxmox_net0: "{{ proxmox_net0 | default('') }}"
          proxmox_node: "{{ proxmox_node | default('') }}"
          proxmox_numa: "{{ proxmox_numa | default('') }}"
          proxmox_ostype: "{{ proxmox_ostype | default('') }}"
          proxmox_qmpstatus: "{{ proxmox_qmpstatus | default('')}}"
          proxmox_scsi0: "{{ proxmox_scsi0 | default('') }}"
          proxmox_scsi1: "{{ proxmox_scsi1 | default('') }}"
          proxmox_scsi2: "{{ proxmox_scsi2 | default('') }}"
          proxmox_scsi3: "{{ proxmox_scsi3 | default('') }}"
          proxmox_scsihw: "{{ proxmox_scsihw | default('') }}"
          proxmox_snapshots: "{{ proxmox_snapshots | default('') }}"
          proxmox_sockets: "{{ proxmox_sockets | default('') }}"
          proxmox_status: "{{ proxmox_status | default('') }}"
          proxmox_vmgenid: "{{ proxmox_vmgenid | default('') }}"
          proxmox_vmid: "{{ proxmox_vmid | default('') }}"
          proxmox_vmtype: "{{ proxmox_vmtype | default('') }}"
          ansible_facts: "{{ filtered_system_facts }}"
      delegate_to: localhost