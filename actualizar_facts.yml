---
- name: Recopilar facts
  hosts: all
  vars:
    awx_url: "{{ lookup('env', 'AWX_API_URL') }}"
    awx_token: "{{ lookup('env', 'AWX_OAUTH_TOKEN') }}"
    ansible_ssh_extra_args: "-o KexAlgorithms=+diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 -o HostKeyAlgorithms=+ssh-rsa -o MACs=hmac-sha1"

  tasks:

    - name: Recopilar facts estándar del sistema
      setup:
        gather_subset:
          - hardware
          - network
          - virtual
          - distribution

    - name: Recopilar información de paquetes instalados
      package_facts:
        manager: auto

    - name: Extraer versiones de Python instaladas
      set_fact:
        python_versions_detected: "{{ python_versions_list | default([]) }}"
      vars:
        python_packages: "{{ ansible_facts.packages | dict2items | selectattr('key', 'match', '^python[0-9.]*
      
    - name: Extraer versiones de Java instaladas
      set_fact:
        java_versions_detected: "{{ java_versions_list | default([]) }}"
      vars:
        java_packages: "{{ ansible_facts.packages | dict2items | selectattr('key', 'search', 'openjdk|java') | list }}"
        java_versions_list: "{{ java_packages | json_query('[].value[*].{name: key, version: version}') | list }}"

    - name: Extraer versiones de Tomcat instaladas
      set_fact:
        tomcat_versions_detected: "{{ tomcat_versions_list | default([]) }}"
      vars:
        tomcat_packages: "{{ ansible_facts.packages | dict2items | selectattr('key', 'search', 'tomcat') | list }}"
        tomcat_versions_list: "{{ tomcat_packages | json_query('[].value[*].{name: key, version: version}') | list }}"

    - name: Construir diccionario con facts filtrados
      set_fact:
        filtered_system_facts:
          hostname: "{{ ansible_hostname }}"
          fqdn: "{{ ansible_fqdn | default('') }}"
          ip: "{{ ansible_default_ipv4.address | default('') }}"
          os:
            name: "{{ ansible_distribution }}"
            version: "{{ ansible_distribution_version }}"
            release: "{{ ansible_distribution_release | default('') }}"
            major_version: "{{ ansible_distribution_major_version | default('') }}"
            minor_version: "{{ ansible_distribution_minor_version | default('') }}"
          kernel: "{{ ansible_kernel }}"
          architecture: "{{ ansible_architecture }}"
          memory_mb: "{{ ansible_memtotal_mb }}"
          cpu_count: "{{ ansible_processor_count }}"
          python_versions: "{{ python_versions_detected }}"
          java_versions: "{{ java_versions_detected }}"
          tomcat_versions: "{{ tomcat_versions_detected }}"
          collected_at: "{{ lookup('pipe', 'date +%Y-%m-%dT%H:%M:%S') }}"

    - name: Actualizar host en AWX con facts filtrados
      awx.awx.host:
        controller_host: "{{ awx_url }}"
        controller_oauthtoken: "{{ awx_token }}"
        inventory: "{{ awx_inventory_id }}"
        name: "{{ inventory_hostname }}"
        validate_certs: false
        variables:
          hostname: (ansible_host | default("")) | regex_replace('---.*$', '')
          original_name: (ansible_host | default(""))
          config_name: (ansible_host | default("")) | regex_replace('---.*$', '')
          alternate_name: (ansible_host | default("")) | regex_replace('^.*---', '')
          ansible_host: (ansible_host | default("")) | regex_replace('---.*$', '')
          ansible_facts: "{{ filtered_system_facts }}"
      delegate_to: localhost